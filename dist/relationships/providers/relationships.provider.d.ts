import { RELATION_LEVEL } from '@prisma/client';
export declare class RelationshipsProvider {
    /**
     * Find a specific relationship between two users
     */
    findRelationship(relatingUserId: string, relatedUserId: string): Promise<{
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    }>;
    /**
     * Create a new relationship
     */
    createRelationship(data: {
        relatingUserId: string;
        relatedUserId: string;
        relationLevel: RELATION_LEVEL;
    }): Promise<{
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    }>;
    /**
     * Update an existing relationship
     */
    updateRelationship(relationshipId: string, data: {
        relationLevel: RELATION_LEVEL;
    }): Promise<{
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    }>;
    /**
     * Delete a relationship
     */
    deleteRelationship(relationshipId: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    }>;
    /**
     * Get relationships where user is the relating user (the one who added others)
     */
    getRelationshipsByRelatingUser(userId: string, // @ts-ignore
    relationLevel?: RELATION_LEVEL): Promise<({
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    })[]>;
    /**
     * Get relationships where user is the related user (the one who was added by others)
     */
    getRelationshipsByRelatedUser(userId: string, // @ts-ignore
    relationLevel?: RELATION_LEVEL): Promise<({
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    })[]>;
    /**
     * Get all relationships for a user (both as relating and related user)
     */
    getAllRelationshipsForUser(userId: string, // @ts-ignore
    relationLevel?: RELATION_LEVEL): Promise<({
        relatedUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
        relatingUser: {
            walletAddress: string;
            username: string | null;
            profilePictureUrl: string | null;
            id: string;
            nullifierHash: string | null;
            annoyIndexPosition: number | null;
            createdAt: Date;
            updatedAt: Date;
            verificationLevel: string | null;
            isVerified: boolean;
            communicationTone: string | null;
            currentAvailability: string;
            currentCuriosity: string | null;
            essenceEmbeddingUpdatedAt: Date | null;
            essenceKeywords: string | null;
            essenceStory: string | null;
            isActive: boolean;
            lastActiveAt: Date;
            locationCity: string | null;
            locationCountry: string | null;
            locationLat: import("@prisma/client/runtime/library.js").Decimal | null;
            locationLng: import("@prisma/client/runtime/library.js").Decimal | null;
            motivationForConnection: string | null;
            name: string | null;
            onboardingCompleted: boolean;
            onboardingCompletedAt: Date | null;
            personalitySummary: string | null;
            sex: string | null;
            successfulConnections: number;
            surroundingDetail: string | null;
            totalMatchesMade: number;
            dateOfBirth: Date | null;
            zodiacSign: string | null;
            baseFarcasterHandle: string | null;
            instagramHandle: string | null;
            linkedinHandle: string | null;
            telegramHandle: string | null;
            websiteUrl: string | null;
            xHandle: string | null;
            zoraHandle: string | null;
            age: number | null;
            privateProfilePictureUrl: string | null;
            userWhy: string | null;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        relationLevel: import("@prisma/client").$Enums.RELATION_LEVEL;
        relatingUserId: string;
        relatedUserId: string;
    })[]>;
}
//# sourceMappingURL=relationships.provider.d.ts.map